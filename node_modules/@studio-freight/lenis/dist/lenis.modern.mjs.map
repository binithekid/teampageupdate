{"version":3,"file":"lenis.modern.mjs","sources":["../src/maths.js","../src/animate.js","../src/dimensions.js","../src/debounce.js","../src/nanoevents.js","../src/virtual-scroll.js","../src/index.js"],"sourcesContent":["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n","import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, { completed })\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n","import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor({ wrapper, content, autoResize = true } = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      const resize = debounce(this.resize, 250)\r\n\r\n      if (this.wrapper !== window) {\r\n        this.wrapperResizeObserver = new ResizeObserver(resize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(resize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    this.scrollHeight = this.content.scrollHeight\r\n    this.scrollWidth = this.content.scrollWidth\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n","export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n","export let createNanoEvents = () => ({\r\n  events: {},\r\n\r\n  // Emit an event with the provided arguments\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  },\r\n\r\n  // Register a callback for the specified event\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  },\r\n})\r\n","import { clamp } from './maths'\r\nimport { createNanoEvents } from './nanoevents'\r\n\r\nexport class VirtualScroll {\r\n  constructor(\r\n    element,\r\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n    this.normalizeWheel = normalizeWheel\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = createNanoEvents()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.events = {}\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      type: 'touch',\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      type: 'touch',\r\n      inertia: true,\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n\r\n    if (this.normalizeWheel) {\r\n      deltaX = clamp(-100, deltaX, 100)\r\n      deltaY = clamp(-100, deltaY, 100)\r\n    }\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\r\n  }\r\n}\r\n","import { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { clamp, modulo } from './maths'\r\nimport { createNanoEvents } from './nanoevents'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explaination\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\nexport default class Lenis {\r\n  // isScrolling = true when scroll is animating\r\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\r\n  // isSmooth = true if scroll should be animated\r\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  /**\r\n   * @typedef {(t: number) => number} EasingFunction\r\n   * @typedef {'vertical' | 'horizontal'} Orientation\r\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\r\n   *\r\n   * @typedef LenisOptions\r\n   * @property {Orientation} [direction]\r\n   * @property {GestureOrientation} [gestureDirection]\r\n   * @property {number} [mouseMultiplier]\r\n   * @property {boolean} [smooth]\r\n   *\r\n   * @property {Window | HTMLElement} [wrapper]\r\n   * @property {HTMLElement} [content]\r\n   * @property {Window | HTMLElement} [wheelEventsTarget]\r\n   * @property {boolean} [smoothWheel]\r\n   * @property {boolean} [smoothTouch]\r\n   * @property {boolean} [syncTouch]\r\n   * @property {number} [syncTouchLerp]\r\n   * @property {number} [touchInertiaMultiplier]\r\n   * @property {number} [duration]\r\n   * @property {EasingFunction} [easing]\r\n   * @property {number} [lerp]\r\n   * @property {boolean} [infinite]\r\n   * @property {Orientation} [orientation]\r\n   * @property {GestureOrientation} [gestureOrientation]\r\n   * @property {number} [touchMultiplier]\r\n   * @property {number} [wheelMultiplier]\r\n   * @property {boolean} [normalizeWheel]\r\n   * @property {boolean} [autoResize]\r\n   *\r\n   * @param {LenisOptions}\r\n   */\r\n  constructor({\r\n    //--legacy options--//\r\n    direction,\r\n    gestureDirection,\r\n    mouseMultiplier,\r\n    smooth,\r\n    //--legacy options--//\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper,\r\n    smoothWheel = smooth ?? true,\r\n    smoothTouch = false,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.1,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = duration ? null : 0.1,\r\n    infinite = false,\r\n    orientation = direction ?? 'vertical', // vertical, horizontal\r\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = mouseMultiplier ?? 1,\r\n    normalizeWheel = false,\r\n    autoResize = true,\r\n  } = {}) {\r\n    // warn about legacy options\r\n    if (direction) {\r\n      console.warn(\r\n        'Lenis: `direction` option is deprecated, use `orientation` instead'\r\n      )\r\n    }\r\n    if (gestureDirection) {\r\n      console.warn(\r\n        'Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead'\r\n      )\r\n    }\r\n    if (mouseMultiplier) {\r\n      console.warn(\r\n        'Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead'\r\n      )\r\n    }\r\n    if (smooth) {\r\n      console.warn(\r\n        'Lenis: `smooth` option is deprecated, use `smoothWheel` instead'\r\n      )\r\n    }\r\n\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      smoothWheel,\r\n      smoothTouch,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n      autoResize,\r\n    }\r\n\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    this.rootElement.classList.add('lenis')\r\n\r\n    this.velocity = 0\r\n    this.isStopped = false\r\n    this.isSmooth = smoothWheel || smoothTouch\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n    this.animate = new Animate()\r\n    this.emitter = createNanoEvents()\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll = new VirtualScroll(wheelEventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.events = {}\r\n\r\n    this.options.wrapper.removeEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.rootElement.classList.remove('lenis')\r\n    this.rootElement.classList.remove('lenis-smooth')\r\n    this.rootElement.classList.remove('lenis-scrolling')\r\n    this.rootElement.classList.remove('lenis-stopped')\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\r\n      (i) => callback !== i\r\n    )\r\n  }\r\n\r\n  setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  onVirtualScroll = ({ type, inertia, deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = type === 'touch'\r\n    const isWheel = type === 'wheel'\r\n\r\n    if (\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\r\n      (isTouch &&\r\n        this.options.gestureOrientation === 'vertical' &&\r\n        this.scroll === 0 &&\r\n        !this.options.infinite &&\r\n        deltaY <= 0) // touch pull to refresh\r\n    )\r\n      return\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    if (\r\n      !!event\r\n        .composedPath()\r\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent') || isTouch && node?.hasAttribute?.('data-lenis-prevent-touch') || isWheel && node?.hasAttribute?.('data-lenis-prevent-wheel'))\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const hasTouchInertia = isTouch && inertia && Math.abs(delta) > 1\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch && {\r\n        lerp: hasTouchInertia ? this.syncTouchLerp : 0.4, // should be 1 but had to leave 0.4 for iOS.....\r\n      }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  onScroll = () => {\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete = null,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    } = {}\r\n  ) {\r\n    if (this.isStopped && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      this.emit()\r\n      onComplete?.()\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      if (target === this.targetScroll) return\r\n\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onUpdate: (value, { completed }) => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        // completed\r\n        if (completed) {\r\n          if (lock) this.isLocked = false\r\n          requestAnimationFrame(() => {\r\n            //avoid double scroll event\r\n            this.isScrolling = false\r\n          })\r\n          this.velocity = 0\r\n          onComplete?.()\r\n        }\r\n\r\n        this.emit()\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? this.options.content\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    return this.isHorizontal ? this.dimensions.limit.x : this.dimensions.limit.y\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  set isSmooth(value) {\r\n    if (this.__isSmooth !== value) {\r\n      this.rootElement.classList.toggle('lenis-smooth', value)\r\n      this.__isSmooth = value\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  set isScrolling(value) {\r\n    if (this.__isScrolling !== value) {\r\n      this.rootElement.classList.toggle('lenis-scrolling', value)\r\n      this.__isScrolling = value\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  set isStopped(value) {\r\n    if (this.__isStopped !== value) {\r\n      this.rootElement.classList.toggle('lenis-stopped', value)\r\n      this.__isStopped = value\r\n    }\r\n  }\r\n}\r\n"],"names":["clamp","min","input","max","Math","Animate","advance","deltaTime","_this$onUpdate","this","isRunning","completed","lerp","value","x","y","to","t","exp","round","currentTime","linearProgress","duration","easedProgress","easing","from","onUpdate","call","stop","fromTo","Dimensions","constructor","wrapper","content","autoResize","resize","onWrapperResize","onContentResize","window","width","innerWidth","height","innerHeight","clientWidth","clientHeight","scrollHeight","scrollWidth","callback","delay","timer","args","arguments","context","clearTimeout","setTimeout","apply","debounce","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","destroy","_this$wrapperResizeOb","_this$contentResizeOb","disconnect","limit","createNanoEvents","events","emit","event","callbacks","i","length","on","cb","_this$events$event","push","_this$events$event2","filter","VirtualScroll","element","wheelMultiplier","touchMultiplier","normalizeWheel","onTouchStart","clientX","clientY","targetTouches","touchStart","lastDelta","onTouchMove","deltaX","deltaY","emitter","type","onTouchEnd","inertia","onWheel","addEventListener","passive","removeEventListener","Lenis","direction","gestureDirection","mouseMultiplier","smooth","document","documentElement","wheelEventsTarget","smoothWheel","smoothTouch","syncTouch","syncTouchLerp","touchInertiaMultiplier","pow","infinite","orientation","gestureOrientation","onVirtualScroll","ctrlKey","isTouch","isWheel","options","scroll","composedPath","find","node","hasAttribute","isStopped","isLocked","preventDefault","isSmooth","isScrolling","animate","delta","abs","hasTouchInertia","velocity","scrollTo","targetScroll","_extends","programmatic","onScroll","lastScroll","animatedScroll","actualScroll","sign","console","warn","lenisVersion","body","dimensions","rootElement","classList","add","virtualScroll","remove","off","_this$emitter$events$","setScroll","isHorizontal","scrollLeft","scrollTop","reset","start","raf","time","target","offset","immediate","lock","onComplete","force","includes","_target","querySelector","nodeType","wrapperRect","getBoundingClientRect","left","top","rect","requestAnimationFrame","d","progress","__isSmooth","toggle","__isScrolling","__isStopped"],"mappings":"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"}